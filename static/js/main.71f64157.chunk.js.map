{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/cardlist.js","components/Searchbox.js","components/CounterButton.js","components/Header.js","components/Scroll.js","containers/constants.js","components/ErrorBound.js","containers/App.js","containers/actions.js","containers/reducers.js","serviceWorker.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","address","className","src","alt","Cardlist","robots","map","user","index","street","Searchbox","searchChange","console","log","style","borderRadius","type","placeholder","onChange","CounterButton","updateCount","setState","state","count","nextProps","nextState","this","color","props","onClick","Component","Header","Scroll","overflowY","border","height","children","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","ErrorBoundary","haserror","error","info","App","onRequestRobots","searchField","ispending","onSearchChange","filterrobots","filter","robot","toLowerCase","includes","length","ErrorBound","connect","searchRobots","requestRobots","dispatch","event","text","target","value","payload","fetch","response","json","catch","err","initialStateSearch","initialStateRobots","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.71f64157.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({name, email, id, address}) =>  {\r\n\t\treturn (\r\n\t\t\t<div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t\t<img src={`https://robohash.org/${id}?size=200x200`} alt=\"Person\" />\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h2> {name} </h2>\r\n\t\t\t\t\t<p> {email} </p>\r\n\t\t\t\t\t<p> {address} </p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n\r\nexport default Card; ","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst Cardlist = ({ robots }) => {\r\n\tif(false) {\r\n\t\tthrow new Error('nooooo');\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t{\r\n    robots.map((user, index) => {\r\n\t\treturn (\r\n\t\t\t<Card key={index} \r\n\t\t\tid={robots[index].id} \r\n\t\t\tname={robots[index].name} \r\n\t\t\temail={robots[index].email}\r\n\t\t\taddress={robots[index].address.street}/>\r\n\t\t\t);\r\n\t})\r\n}\r\n    </div>\r\n\t\t);\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst Searchbox = ({searchChange}) => {\r\n\tconsole.log(\"search\");\r\n\treturn (\r\n\t\t<div className='pa3'>\r\n\t\t\t<input \r\n\t\t\t\tstyle = {{borderRadius: '8px',}}\r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue tc'\r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder='search robots' \r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Searchbox;","import React, {Component} from 'react';\r\n\r\nclass CounterButton extends Component {\r\nconstructor() {\r\n\tsuper();\r\n\tthis.state = {\r\n\t\tcount: 0\r\n\t}\r\n}\r\n\r\nshouldComponentUpdate(nextProps, nextState) {\r\n\tif(this.state.count !== nextState.count)\r\n\treturn true;\r\n\treturn false;\r\n}\r\n\r\nupdateCount = () => {\r\n\tthis.setState(state => {\r\n\t\treturn {count: state.count + 1}\r\n\t});\r\n}\r\n\r\nrender() {\r\n\tconsole.log(\"CounterButton\");\r\n\treturn (\r\n\t\t<>\r\n\t\t<button color={this.props.color} onClick={this.updateCount}>Count: {this.state.count}</button>\r\n\t\t</>\r\n\t\t);\r\n}\r\n}\r\n\r\nexport default CounterButton;","import React, {Component} from 'react';\r\nimport CounterButton from './CounterButton';\r\n\r\nclass Header extends Component {\r\n\r\nshouldComponentUpdate(nextProps, nextState) {\r\n\treturn false;\r\n}\r\n\r\nrender() {\r\n\tconsole.log(\"header\");\r\n\treturn (\r\n\t\t<>\r\n\t\t<h1 className='f1'>Robo Friends</h1>\r\n\t\t<CounterButton color={'red'} />\r\n\t\t</>\r\n\t\t);\r\n}\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\n\r\nexport default Scroll;","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\r\n","import React, {Component} from 'react';\r\nclass ErrorBoundary extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thaserror: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({haserror: true})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.haserror) {\r\n\t\t\treturn <h1> Ooops some error present </h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Cardlist from '../components/cardlist';\nimport Searchbox from '../components/Searchbox';\nimport Header from '../components/Header';\nimport Scroll from '../components/Scroll';\nimport {setSearchField, requestRobots} from './actions.js';\nimport './App.css';\nimport ErrorBoundary from '../components/ErrorBound.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    ispending: state.requestRobots.ispending,\n    error: state.requestRobots.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => {\n      dispatch(setSearchField(event.target.value))\n  },\n    onRequestRobots: () => {\n      dispatch(requestRobots());\n    }\n  }\n}\n\nclass App extends Component {\n\ncomponentDidMount() {\n  this.props.onRequestRobots();\n}\n\n\n  render() {\n    const {searchField, robots, ispending, onSearchChange} = this.props;\n    const filterrobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchField.toLowerCase())\n  });\n    return ispending ?\n      <h1 className='tc f1'> Loading </h1>\n    :\n          !filterrobots.length ?\n      <div className='tc'>\n    <Header />\n    <Searchbox searchChange={onSearchChange}/>\n      <h1 className='tc'> No Users Present </h1>\n      </div>\n    :\n    <div className='tc'>\n    <Header />\n    <Searchbox searchChange={onSearchChange}/>\n    <Scroll>\n      <ErrorBoundary>\n        <Cardlist robots={filterrobots}/>\n      </ErrorBoundary>\n    </Scroll>\n    </div>\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED} from './constants.js';\r\n\r\nexport const setSearchField = (text) => {\r\n\treturn {\r\n\ttype: CHANGE_SEARCH_FIELD,\r\n\tpayload: text\r\n\t}\r\n}\t\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n\tdispatch({ type: REQUEST_ROBOTS_PENDING});\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n  .then(response => response.json())\r\n  .then(robots => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: robots}))\r\n  .catch(err => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: err}));\r\n}","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED} from './constants.js';\r\n\r\nconst initialStateSearch = {\r\n\tsearchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch, action={}) => {\r\n\tswitch(action.type){\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\t\treturn Object.assign({}, state, {searchField: action.payload});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst initialStateRobots = {\r\n\tispending: false,\r\n\trobots: [],\r\n\terror: ''\r\n}\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n\tswitch(action.type){\r\n\t\tcase REQUEST_ROBOTS_PENDING:\r\n\t\t\treturn Object.assign({}, state, {ispending: true});\r\n\t\tcase REQUEST_ROBOTS_SUCCESS:\r\n\t\t\treturn Object.assign({}, state, {ispending:false, robots: action.payload});\r\n\t\tcase REQUEST_ROBOTS_FAILED:\r\n\t\t\treturn Object.assign({}, state, {ispending: false, error: action.payload});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\nimport {Provider} from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\nimport {searchRobots, requestRobots} from './containers/reducers.js';\nimport {createLogger} from 'redux-logger';\nimport * as serviceWorker from './serviceWorker';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({searchRobots, requestRobots});\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\nreportWebVitals();\n"],"sourceRoot":""}